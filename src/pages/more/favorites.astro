---
import Layout from "../../layouts/default.astro";

let books = [
  { id: 1, title: "On Freedom", author: "Maggie Nelson" },
  { id: 2, title: "Bluets", author: "Maggie Nelson" },
  { id: 3, title: "Argonauts", author: "Maggie Nelson" },
  { id: 4, title: "Scholomance trilogy", author: "Naomi Novik" },
  { id: 5, title: "Ender's Game", author: "Orson Scott Card" },
  { id: 6, title: "Gift (trilogy)", author: "Ursula K. Le Guin" },
  { id: 6, title: "Disability Visibility", author: "Alice Wong" },
];

books = books.concat(books);
const numBooks = books.length;
console.log(numBooks)
---

<script>
  // @ts-nocheck
  const buttons = document.querySelectorAll("button");
  console.log(buttons);
  buttons.forEach((button) => {
    let bookId = -1;
    button.addEventListener("click", (e) => {
      bookId = e.target.dataset.bookId;
        if (bookId == -1) {
            console.log("Returning early")
            return
        }

        // close all other dialogs
        document.querySelectorAll(".book-dialog").forEach((b) => b.close());
        document.querySelector(`#book${bookId}`).show()
    });
  });
</script>

<Layout>
  <h1>Favorites</h1>

  <div class="container">
  <h2>Favorite Books</h2>

  <ul class="bookshelf">
    {
      books.map((book) => {
        // Include data-book-id on small because we were getting an error if the small was clicked directly
        return (
          <li class="book">
            <button data-book-id={book.id}>{book.title} <small data-book-id={book.id}>{book.author}</small></button>
          </li>
        );
      })
    }
  </ul>
  {
    books.map((book) => {
      return (
        <dialog id=`book${book.id}` class="book-dialog">
            <div class="dialog-contents">
                <div>{book.title}</div>
                <small>{book.author}</small>
            </div>
        </dialog>
        );
    })
  }

</div>
</Layout>

<style define:vars={{ numBooks }}>

.container {
}
  
  ul {
    list-style-type: none;
  }

  .bookshelf {
    display: grid;
    grid-template-columns: repeat(var(--numBooks), 1fr);
    align-items: end;
    margin-left: auto;
    margin-right: auto;
    gap: 40px 0.04rem;
    padding: 10px 0;
    justify-content: center;
    width: fit-content;
    max-width: 100%;
    overflow-x: scroll;
    overflow-y: visible;
  }

  .book {
    writing-mode: vertical-lr;
    background: #b1c6fa;
    border: 1px solid black;
    border-radius: 5px;
    padding: 12px 16px;
    transition: transform 0.4s ease;
    width: fit-content;
  }

  .book:hover {
    transform: scale(1.05);
  }

  .book button {
    /* Reset .book button so styles come from .book */
    border: none;
    margin: 0;
    padding: 0;
  }

  small {
    color: rgb(50, 50, 50);
    padding-top: 0.5rem;
  }

  dialog {
    width: 30rem;
    height: 15rem;
    border-radius: 4px;
    margin: 2rem auto;
  }

  .dialog-contents {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 1.375rem;
  }


  /*  https://codepen.io/GhostRider/pen/oNvoNv */
.bookshelf::-webkit-scrollbar-track {
	-webkit-box-shadow: inset 0 0 4px rgba(0,0,0,0.3);
	background-color: #F5F5F5;
}

.bookshelf::-webkit-scrollbar {
  width: 10px;
  height: 8px;
	background-color: #F5F5F5;
}

.bookshelf::-webkit-scrollbar-thumb {
	background-color: #0ae;
	background-image: -webkit-gradient(linear, 0 0, 0 100%,
	                  color-stop(.5, rgba(255, 255, 255, .2)),
					          color-stop(.5, transparent), to(transparent));
}

</style>
