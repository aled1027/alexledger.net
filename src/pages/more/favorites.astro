---
import Layout from "../../layouts/default.astro";

let books = [
  { id: 1, title: "On Freedom", author: "Maggie Nelson", link: '' },
  { id: 2, title: "Bluets", author: "Maggie Nelson" , link: ''},
  { id: 3, title: "Argonauts", author: "Maggie Nelson", link: '' },
  { id: 4, title: "Scholomance trilogy", author: "Naomi Novik", link: '' },
  { id: 5, title: "Ender's Game", author: "Orson Scott Card", link: '' },
  { id: 6, title: "Gift (trilogy)", author: "Ursula K. Le Guin", link: '' },
  { id: 6, title: "Disability Visibility", author: "Alice Wong", link: '' },
];

// books = books.concat(books)
const numBooks = books.length;
---



<!-- <link href="/pagefind/pagefind-ui.css" rel="stylesheet" /> -->
<!-- <script is:inline src="/pagefind/pagefind-ui.js"></script> -->


<Layout>
  <h1>Favorites</h1>
  <div class="container">
    <h2>Favorite Books</h2>
    <ul class="bookshelf">
      {books.map((book) => {
          // Include data-book-id on small because we were getting an error if the small was clicked directly
          return (
            <li>
              <button class="book" data-book-title={book.title} data-book-id={book.id}>{book.title} <small data-book-id={book.id}>{book.author}</small></button>
            </li>
          );
        })
      }
    </ul>

    <!-- Show a default book dialog informing users to click -->
    <dialog id='book0' class="book-dialog" open>
        <div class="dialog-contents">
          <small>Click a book to view information</small>
        </div>
    </dialog>

    {books.map((book) => {
        // TODO: use book.link
        return (
          <dialog id=`book${book.id}` class="book-dialog">
              <div class="dialog-contents">
                  <div>{book.title}</div>
                  <small>{book.author}</small>
              </div>
          </dialog>
          );
      })
    }
    <div class="book-dialog-placeholder"></div>
   <h3>References</h3>
   <ul>
     <li><a href="https://codepen.io/GhostRider/pen/oNvoNv">https://codepen.io/GhostRider/pen/oNvoNv</a> for the scrollbar</li>
   </ul>
  </div>
</Layout>

<script is:inline>
  // @ts-nocheck
  const buttons = document.querySelectorAll("button");
  buttons.forEach((button) => {
    let bookId = -1;
    button.addEventListener("click", (e) => {
      bookId = e.target.dataset.bookId;
        if (bookId == -1) {
            console.log("Returning early")
            return
        }

        // close all other dialogs
        document.querySelectorAll(".book-dialog").forEach((b) => b.close());
        document.querySelector(`#book${bookId}`).show()

    });
  });
</script>


<style define:vars={{ numBooks }}>
  .container {}
  
  ul.bookshelf {
    list-style-type: none;
  }

  .bookshelf {
    display: grid;
    grid-template-columns: repeat(var(--numBooks), 1fr);
    align-items: end;
    margin-left: auto;
    margin-right: auto;
    gap: 40px 0.05rem;
    padding: 10px 10px;
    width: fit-content;
    max-width: 100%;
    overflow-x: auto;
  }

  .book {
    writing-mode: vertical-lr;
    background: #b1c6fa;
    border: 1px solid black;
    border-radius: 5px;
    padding: 12px 16px;
    transition: transform 0.4s ease;
    width: fit-content;
  }

  .book:hover {
    transform: scale(1.05);
  }

  .book button {
    /* Reset .book button so styles come from .book */
    border: none;
    margin: 0;
    padding: 0;
  }

  small {
    color: rgb(50, 50, 50);
    padding-top: 0.5rem;
  }

  dialog {
    width: 30rem;
    height: 15rem;
    border-radius: 4px;
    margin: 2rem auto;
  }

  .dialog-contents {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 1.375rem;
  }


  .bookshelf::-webkit-scrollbar-track {
  	-webkit-box-shadow: inset 0 0 4px rgba(0,0,0,0.3);
  	background-color: #F5F5F5;
  }

  .bookshelf::-webkit-scrollbar {
    width: 10px;
    height: 8px;
  	background-color: #F5F5F5;
  }

  .bookshelf::-webkit-scrollbar-thumb {
  	background-color: #0ae;
  	background-image: -webkit-gradient(linear, 0 0, 0 100%,
  	                  color-stop(.5, rgba(255, 255, 255, .2)),
  					          color-stop(.5, transparent), to(transparent));
  }

  .book-dialog-placeholder {
    height: 400px;
    width: 100%;
  }
</style>
