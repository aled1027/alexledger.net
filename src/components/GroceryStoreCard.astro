---
interface Props {
  grocery: Object;
}
const { grocery } = Astro.props;

// Design influenced by: https://cars.usnews.com/cars-trucks/rankings/small-cars
---

<dialog id=`dialog${grocery.Id}`>
  <h4>{grocery.Name}</h4>
  {
    grocery.NumIssues > 0 ? (
      <div set:html={grocery.ReadMoreAsHtml} />
    ) : (
      <ul>
        <li>No Issues</li>
      </ul>
    )
  }
  <button data-target=`#dialog${grocery.Id}` class="register-close-modal"
    >Close</button
  >
</dialog>

<div class="container">
  <div class="card">
    <div class="left">
      <button
        class=`tooltip dot align-self-center bg-${grocery.GreenYellowRed.toLowerCase()}`>
        <span class="tooltiptext">Rated: {grocery.GreenYellowRed}</span>
      </button>
      <div class="left-content">
        <h3><a href={grocery.Website}>{grocery.Name}</a></h3>
        <span>{grocery.Owner}</span>
        <small>{grocery.OwnerSubtext}</small>
      </div>
    </div>
    <div class="right">
      <div class="right-entry">
        <small>No. Employees</small>
        <span>{grocery["Number of Employees"]}</span>
      </div>
      <div class="right-entry">
        <small>No. Stores</small>
        <span>{grocery["Number of Stores"] || "Unknown"}</span>
      </div>
      <div class="right-entry">
        <small>Documented Issues</small>
        <span>{grocery["NumIssues"]}</span>
      </div>
      <div class="right-entry">
        <small>Starting Wage</small>
        <span>{grocery["Starting Wage"] || "Unknown"}</span>
      </div>
      <div class="right-entry">
        <small>Unionized?</small>
        <span>{grocery["Unionized?"] || "Unknown"}</span>
      </div>
      <div class="right-entry">
        <small> </small>
        <span><a href={grocery["Wikipedia Page"]}>Wikipedia</a></span>
      </div>
      <div class="right-entry">
        <button
          id=`button${grocery.Id}`
          data-target=`#dialog${grocery.Id}`
          class="button-like-link register-open-modal">Read More</button
        >
      </div>
    </div>
  </div>
</div>

<style>
  .container {
    container-type: inline-size;
  }
  .card {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 3fr;
    margin: 1rem 0;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);

    @container (min-width: 600px) {
      grid-template-columns: 2fr 3fr;
      grid-template-rows: 1fr;
      margin: 0.375rem 0;
    }

    &:hover {
      background: var(--surface-2);
    }
  }

  .left {
    padding: 1rem;
    display: flex;
    gap: 1.5rem;
    align-items: center;
    border: 1px solid var(--stone-5);

    /* Do a bit of work to prevent double borders with the right side */
    border-right: 1px solid var(--stone-5);
    border-bottom: none;

    @container (min-width: 600px) {
      border-right: none;
      border-bottom: 1px solid var(--stone-5);
    }
  }

  h3 {
    margin: 0;
  }

  h5 {
    font-size: 1em;
    font-weight: var(--font-weight-5);
  }

  h3 a {
    text-decoration: none;
    &:hover {
      text-decoration: underline;
    }
  }

  .left-content {
    display: flex;
    flex-direction: column;
  }

  .right {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    grid-template-columns: 1fr 1fr;
    grid-auto-flow: column;
    gap: 0.5rem;
    padding: 1rem;
    border: 1px solid var(--stone-5);

    @container (min-width: 600px) {
      grid-template-rows: 1fr 1fr;
      grid-template-columns: 1fr 1fr 1fr;
    }
  }

  .right-entry {
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  dialog {
    min-width: 33vw;
    max-width: 80vw;
    border: 1px solid rgba(0, 0, 0, 0.8);
    border-radius: 5px;
    background-color: var(--surface-1);
    color: var(--text-1);
  }

  /* Components */
  .dot {
    padding: 8px;
    height: 35px;
    width: 35px;
    border-radius: 50%;
    display: inline-block;
    border-color: var(--text-1);
  }

  .button-like-link {
    /* Component for a button that looks like text */
    padding: 0;
    width: fit-content;
    border: none;
    color: inherit;
    background: inherit;
    text-decoration: underline;
    text-decoration-color: var(--fun-1);
    text-decoration-thickness: 2px;
    text-underline-offset: 3px;
    text-decoration-skip-ink: skip;

    &:hover {
      text-decoration-color: var(--fun-2);
    }
  }

  /* Utilities */
  .text-xs {
    font-size: 12px;
  }

  .bg-green {
    background-color: var(--green-5);
  }

  .bg-yellow {
    background-color: var(--yellow-5);
  }

  .bg-red {
    background-color: var(--red-5);
  }

  /* Tooltip from https://www.w3schools.com/css/css_tooltip.asp */
  .tooltip {
    position: relative;
  }

  .tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;

    /* Position the tooltip text - see examples below! */
    position: absolute;
    z-index: 1;
  }

  /* Show the tooltip text when you mouse over the tooltip container */
  .tooltip:hover .tooltiptext {
    visibility: visible;
  }
</style>
