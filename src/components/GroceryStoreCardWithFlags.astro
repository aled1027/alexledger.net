---
// @ts-nocheck

import Flag from "./icons/Flag.astro";

interface Flag {
  id: number,
  date: string,
  description: string,
  greenYellowRed: string,

}

interface Grocery {
  name: string,
  greenYellowRed: string,
  website: string,
  owner: string,
  ownerSubtext: string,
  flags: Flag[],
}
interface Props {
  grocery: Grocery;
}

const { grocery } = Astro.props;

const colorOrderMap = {
  green: 0,
  yellow: 1,
  red: 2,
}
grocery.flags.sort((f1, f2) => colorOrderMap[f1.color] - colorOrderMap[f2.color]);

// Design influenced by: https://cars.usnews.com/cars-trucks/rankings/small-cars
---

<div class="container">
  <div class="card">
    <div class="left">
      <button
        class=`tooltip dot align-self-center bg-${grocery.greenYellowRed.toLowerCase()}`>
        <span class="tooltiptext">Rated: {grocery.greenYellowRed}</span>
      </button>
      <div class="left-content">
        <h3><a href={grocery.website}>{grocery.name}</a></h3>
        <span>{grocery.owner}</span>
        <small>{grocery.ownerSubtext}</small>
      </div>
    </div>
    <div class="right">
      {
        grocery.flags.map((flag) => {
          // TODO: this can be moved out into a GroceryFlag component
          return (
            <dialog id=`dialog${grocery.id}-flag${flag.id}`>
              <h4>{flag.description}</h4>
              <p>{flag.description}</p>
              <button data-target=`#dialog${grocery.id}-flag${flag.id}` class="register-close-modal">Close</button>
            </dialog>
            <div class=`flag fill-${flag.greenYellowRed.toLowerCase()} tooltip register-open-modal` data-target=`#dialog${grocery.id}-flag${flag.id}`>
              <Flag />
              <span class="tooltiptext">{flag.description}</span>
            </div>
          );
        })
      }
    </div>
  </div>
</div>

<style>
  .container {
    container-type: inline-size;
  }
  .card {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 3fr;
    margin: 1rem 0;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);

    @container (min-width: 600px) {
      grid-template-columns: 2fr 3fr;
      grid-template-rows: 1fr;
      margin: 0.375rem 0;
    }

    &:hover {
      background: var(--color-surface-secondary);
    }
  }

  .left {
    padding: 1rem;
    display: flex;
    gap: 1.5rem;
    align-items: center;
    border: 1px solid var(--stone-5);

    /* Do a bit of work to prevent double borders with the right side */
    border-right: 1px solid var(--stone-5);
    border-bottom: none;

    @container (min-width: 600px) {
      border-right: none;
      border-bottom: 1px solid var(--stone-5);
    }
  }

  h3 {
    margin: 0;
  }

  h5 {
    font-size: 1em;
    font-weight: var(--font-weight-5);
  }

  h3 a {
    text-decoration: none;
    &:hover {
      text-decoration: underline;
    }
  }

  .left-content {
    display: flex;
    flex-direction: column;
  }

  .right {
    display: flex;
    gap: 1rem;
    padding: 1rem;
    /* Weird stuff with this border overlapping the the tooltip */
    border: 1px solid var(--stone-5);
    @container (min-width: 600px) {}
  }

  .right-entry {
    /* display: flex; */
    /* flex-direction: column; */
    /* gap: 0; */
  }

  dialog {
    min-width: 33vw;
    max-width: 80vw;
    border: 1px solid rgba(0, 0, 0, 0.8);
    border-radius: 5px;
    background-color: var(--color-surface-primary);
    color: var(--color-text-primary);
    fill: var(--color-text-primary);
  }


  /* Tooltip from https://www.w3schools.com/css/css_tooltip.asp */
  .tooltip {
    position: relative;
  }

  .tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;

    /* Position the tooltip text - see examples below! */
    position: absolute;
    z-index: 999;
  }

  /* Show the tooltip text when you mouse over the tooltip container */
  .tooltip:hover .tooltiptext {
    visibility: visible;
  }

  /* Components */
  .dot {
    padding: 8px;
    height: 35px;
    width: 35px;
    border-radius: 50%;
    display: inline-block;
    border-color: var(--color-text-primary);
  }

  .button-like-link {
    /* Component for a button that looks like text */
    padding: 0;
    width: fit-content;
    border: none;
    color: inherit;
    background: inherit;
    text-decoration: underline;
    text-decoration-color: var(--color-primary);
    text-decoration-thickness: 2px;
    text-underline-offset: 3px;
    text-decoration-skip-ink: skip;

    &:hover {
      text-decoration-color: var(--color-secondary);
    }
  }


  .flag {
    width: 24px;
    height: 24px;
    color: var(--color-text-primary);

    &:hover {
      cursor: pointer;
    }
  }

  /* Utilities */
  .text-xs {
    font-size: 12px;
  }

  .bg-green {
    background-color: var(--green-5);
  }

  .bg-yellow {
    background-color: var(--yellow-5);
  }

  .bg-red {
    background-color: var(--red-5);
  }

  .fill-green {
    fill: var(--green-8);
  }

  .fill-yellow {
    fill: var(--yellow-8);
  }

  .fill-red {
    fill: var(--red-8);
  }
</style>
